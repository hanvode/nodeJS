Mot so cau lenh DOcker co ban : 
+ docker run: lenh chay mot container tu mot Image
+ docker pull: lenh tai mot image tu docker registry ve may tinh
+ docker push: lenh day mot image len docker registry
+ docker build: lenh de tao mot image tu Dockerfile
+ docker images: lenh hien thi danh sach cac image co san trong Docker
+ docker ps: lenh hien thi danh sach cac container dang chay
+ docker stop: lenh dung mot container dang chay
+ docker rm: lenh de xoa mot container da dung hoac bi loi
+ docker rmi: lenh de xoa mot image
+ docker exec: lenh de thuc thi mot lenh trong container dang chay

thuc hanh:
+ chay 1 container tu mot image da co hoac tai tu docker registry:
docker run --name nestjs-basic -p 3000:3000 -d tuanops/nestjs-basic:latest
--name nestjs-basic:  dat ten cho container la nestjs-basic
-p 3000:3000:  ben trong container chay cong 3000, vi vay can map cong nay ra cong 3000 cua host
-d:  cho container chay ngam (detach mode) va tra ve container ID
tuanops/nestjs-basic:latest: ten image de chay container, co san tren may hoac tai ve tu docker hub/registry

+ thuc thi mot lenh trong container
sudo docker exec -it c53e7a23e60e /bin/sh
-it : de tao mot interactive shell sau khi truy cap vao container
c53e7a23e60e: container ID cua container can truy cap
/bin/sh:  là command cần thực thi trong container đó. Ở đây, chúng ta sử dụng shell (/bin/sh) để thực thi các lệnh trong container.

+build mot image
docker build -t tuanops/nestjs-basic .
-t tuanops/nestjs-basic : dat ten cho image la tuanops/nestjs-basic
. : duong dan toi Dockerfile, o day la duong dan hien tai

+code ung dung va chay truc tiep bang docker
docker run --name nestjs-basic -p 3000:3000 -v $(pwd):/nest tuanops/nestjs-basic
-v :  ánh xạ thư mục vào trong container, cụ thể ánh xạ thư mục gốc đang đứng ( $(pwd)) vào thư mục nest bên trong container 
( thư mục đó được định nghĩa trong Dockerfile khi định nghĩa WORKDIR ).
tuanops/nestjs-basic: là image mình đã build ra.
--name: đặt tên cho container là nestjs-basic.

+khi lo tat hoac stop container, ta chi can chay lai nhu sau:
docker start -a container ID
-a :  Vì khi container được khởi động lại bằng lệnh docker start, nó sẽ chạy ở nền và không hiển thị log trực tiếp trên terminal của bạn. 
chúng ta dùng tham số trên để dễ dàng trong việc phát triển, debug ứng dụng.

+ cai them thu vien lodash:
docker exec -it containerID npm install lodash


Docker Compose là một công cụ giúp bạn quản lý nhiều container cùng lúc trong Docker.
Docker Compose cho phép bạn định nghĩa các container cần thiết để triển khai ứng dụng của bạn trong cùng 1 tệp cấu hình ( .yaml ).
Các tệp cấu hình này chứa các thông tin về image, environment, network, volume ...

Cac thanh phan co ban cua Docker Compose:
+ Compose file: Đây là một tệp YAML ( docker-compose.yml ) chứa thông tin cần thiết về container để triển khai ứng dụng của bạn.
+ Các dịch vụ (services): Là một nhóm container mà các bạn muốn tạo ra. Mỗi service đại diện cho một thành phần của ứng dụng, 
ví dụ như service backend, service frontend, service database...
+ Container: Là một đối tượng chứa ứng dụng của bạn và các thành phần của nó, bao gồm phần mềm và cấu hình của ứng dụng. 
Docker Compose sử dụng các container để triển khai các services được định nghĩa trong tệp docker-compose.yml.
+ Các mạng (networks): Định nghĩa các mạng ảo để các container trong cùng một service hoặc các service khác nhau liên lạc với nhau.
 Các mạng này cho phép các container truy cập lẫn nhau bằng tên hoặc địa chỉ IP.
+ Các khối lưu trữ (volumes): Là một phần quan trọng của quá trình triển khai Docker Compose, cho phép bạn lưu trữ dữ liệu
 của ứng dụng của mình độc lập với các container. Điều này giúp cho việc sao lưu, phục hồi và quản lý dữ liệu trở nên dễ dàng hơn.
+ Các biến môi trường (environment variables): Là các biến môi trường được sử dụng để cấu hình các container của dịch vụ. 
Điều này giúp bạn dễ dàng định nghĩa các cấu hình của ứng dụng của mình trong tệp docker-compose.yml một cách linh hoạt hơn.
+ Command line interface (CLI): Là giao diện dòng lệnh để chạy các lệnh liên quan đến Docker Compose, cho phép tạo, triển khai,
 quản lý và xóa các container và service.


+ Chay file docker compose bang lenh
docker-compose up -d
up: Khởi động các container và các dịch vụ được định nghĩa trong file docker-compose.yml.
-d: chạy ở chế độ nền ( detach ), nghĩa là không cần phải theo dõi đầu ra của các container trong terminal

+ Xem logs truc tiep cua 1 container
docker logs containerID -f
-f : follow logs cua container, neu ko co thi se ko cap nhat logs moi 

